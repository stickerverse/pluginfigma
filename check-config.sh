#!/bin/bash

# Canvas Weaver System Configuration Checker
# This script checks the configuration of all Canvas Weaver components
# and reports any issues or inconsistencies

echo "üîç Canvas Weaver System Configuration Checker"
echo "============================================="

# Check if servers are running
echo -e "\nüì° Checking server status..."
HTTP_PORT=3001
WS_PORT=8082

HTTP_RUNNING=$(lsof -i :$HTTP_PORT | grep LISTEN)
WS_RUNNING=$(lsof -i :$WS_PORT | grep LISTEN)

if [ -n "$HTTP_RUNNING" ]; then
  echo "‚úÖ HTTP API server is running on port $HTTP_PORT"
else
  echo "‚ùå HTTP API server is NOT running on port $HTTP_PORT"
fi

if [ -n "$WS_RUNNING" ]; then
  echo "‚úÖ WebSocket server is running on port $WS_PORT"
else
  echo "‚ùå WebSocket server is NOT running on port $WS_PORT"
fi

# Check manifest.json configuration
echo -e "\nüìù Checking Figma plugin manifest..."
if grep -q '"ui":"build/ui.html"' manifest.json; then
  echo "‚úÖ Manifest points to correct UI HTML file"
else
  echo "‚ùå Manifest does not point to UI HTML file (should be 'build/ui.html')"
fi

# Check UI HTML file
echo -e "\nüñ•Ô∏è Checking UI HTML configuration..."
if [ -f "build/ui.html" ]; then
  echo "‚úÖ UI HTML file exists"
  if grep -q '<script src="./ui.js"></script>' build/ui.html; then
    echo "‚úÖ UI HTML file correctly references UI JavaScript"
  else
    echo "‚ùå UI HTML file has incorrect JavaScript reference"
  fi
else
  echo "‚ùå UI HTML file does not exist at build/ui.html"
fi

# Check Chrome extension configuration
echo -e "\nüåê Checking Chrome extension configuration..."
if grep -q "ws://localhost:8082" chrome-extension/background.js; then
  echo "‚úÖ Chrome extension background script uses correct WebSocket URL"
else
  echo "‚ùå Chrome extension background script has incorrect WebSocket URL (should be 'ws://localhost:8082')"
fi

# Check server configuration
echo -e "\n‚öôÔ∏è Checking server configuration..."
if grep -q "websocketPort: process.env.WS_PORT || 8082" server/production-config.js; then
  echo "‚úÖ Server configured to use WebSocket port 8082"
else
  echo "‚ùå Server configuration has incorrect WebSocket port (should be 8082)"
fi

if grep -q "new WebSocketBroker(8082)" server/server.js; then
  echo "‚úÖ Server initialization uses correct WebSocket port"
else
  echo "‚ùå Server initialization uses incorrect WebSocket port (should be 8082)"
fi

# Check plugin WebSocket configuration
echo -e "\nüîå Checking plugin WebSocket configuration..."
if grep -q "websocketUrl: isDev ? 'ws://localhost:8082'" src/production-config.ts; then
  echo "‚úÖ Plugin configured to use correct WebSocket URL"
else
  echo "‚ùå Plugin configuration has incorrect WebSocket URL (should use port 8082)"
fi

echo -e "\n‚ú® Configuration check complete!"
